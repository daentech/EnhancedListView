buildscript {
  repositories {
    mavenCentral()
  }
}

apply plugin: 'com.android.library'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.nineoldandroids:library:2.4.0'
}

android {
    buildToolsVersion '21.1.1'
    compileSdkVersion 21

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 21
        versionName "0.3.5-SNAPSHOT"
        versionCode 10
    }

	lintOptions {
		abortOnError false
	}
}

apply plugin: 'maven'
apply plugin: 'signing'

version = android.defaultConfig.versionName
group = "net.goldenspiral.timroes"
ext.isReleaseBuild = !version.endsWith("-SNAPSHOT")

def repositoryUrl
if (isReleaseBuild) {
    println 'RELEASE BUILD'
    repositoryUrl = hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else {
    println 'SNAPSHOT BUILD'
    repositoryUrl = hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL : "https://oss.sonatype.org/content/repositories/snapshots/"

}

def getRepositoryUsername() {
    return hasProperty('nexusUsername') ? nexusUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('nexusPassword') ? nexusPassword : ""
}


afterEvaluate { project ->
    uploadArchives {
        configuration = configurations.archives
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: repositoryUrl) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }

                pom.project {
                    name 'EnhancedListView'
                    packaging 'aar'
                    description 'ListView with enhanced features for Android'
                    url 'https://github.com/goldenspiral/EnhancedListView'

                    scm {
                        url 'scm:git@github.com:timroes/EnhancedListView.git'
                        connection 'scm:git@github.com:goldenspiral/EnhancedListView.git'
                        developerConnection  'scm:git@github.com:goldenspiral/EnhancedListView.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'timroes'
                            name 'Tim Roes'
                            email 'mail@timroes.de'
                        }
                        developer {
                            id 'jcogilvie'
                            name 'Jonathan Ogilvie'
                            email 'jcogilvie@goldenspiral.net'
                        }
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

//    task androidJavadocs(type: Javadoc) {
//        source = android.sourceSets.main.allJava
//        classpath += project.files(android.plugin.getRuntimeJarList().join(File.pathSeparator))
//    }
//
//    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//        classifier = 'javadoc'
//        //basename = artifact_id
//        from androidJavadocs.destinationDir
//    }
//
//    task androidSourcesJar(type: Jar) {
//        classifier = 'sources'
//        //basename = artifact_id
//        from android.sourceSets.main.allSource
//    }

    artifacts {
        //archives packageReleaseJar
//        archives androidSourcesJar
//        archives androidJavadocsJar
    }
}

